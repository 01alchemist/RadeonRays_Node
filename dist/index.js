(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["radeonrays"] = factory();
	else
		root["radeonrays"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var rpr_constants = __webpack_require__(1);
var radeonrays_api;
try {
    radeonrays_api = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"../build/Release/radeonrays\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
}
catch (e) {
    console.log(e);
    // radeonrays_api = require('../build/Debug/radeonrays');
}
module.exports = __assign({}, radeonrays_api, rpr_constants);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*****************************************************************************\
*
*  RadeonProRenderNode constants
*  Module Name    FireRender.h
*  Project        FireRender Engine
*
*  Description    Fire Render Interface header
*
*  Copyright 2015 Advanced Micro Devices, Inc.
*
*  All rights reserved.  This notice is intended as a precaution against
*  inadvertent publication and does not imply publication or any waiver
*  of confidentiality.  The year included in the foregoing notice is the
*  year of creation of the work.
*  @author Dmitry Kozlov (dmitry.kozlov@amd.com)
*  @author Takahiro Harada (takahiro.harada@amd.com)
*  @author Nidin Vinayakan (01@01alchemist.com)
*  @bug No known bugs.
*
\*****************************************************************************/
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPR_API_VERSION = 0x010000252;
/* rpr_status */
exports.RPR_SUCCESS = 0;
exports.RPR_ERROR_COMPUTE_API_NOT_SUPPORTED = -1;
exports.RPR_ERROR_OUT_OF_SYSTEM_MEMORY = -2;
exports.RPR_ERROR_OUT_OF_VIDEO_MEMORY = -3;
exports.RPR_ERROR_INVALID_LIGHTPATH_EXPR = -5;
exports.RPR_ERROR_INVALID_IMAGE = -6;
exports.RPR_ERROR_INVALID_AA_METHOD = -7;
exports.RPR_ERROR_UNSUPPORTED_IMAGE_FORMAT = -8;
exports.RPR_ERROR_INVALID_GL_TEXTURE = -9;
exports.RPR_ERROR_INVALID_CL_IMAGE = -10;
exports.RPR_ERROR_INVALID_OBJECT = -11;
exports.RPR_ERROR_INVALID_PARAMETER = -12;
exports.RPR_ERROR_INVALID_TAG = -13;
exports.RPR_ERROR_INVALID_LIGHT = -14;
exports.RPR_ERROR_INVALID_CONTEXT = -15;
exports.RPR_ERROR_UNIMPLEMENTED = -16;
exports.RPR_ERROR_INVALID_API_VERSION = -17;
exports.RPR_ERROR_INTERNAL_ERROR = -18;
exports.RPR_ERROR_IO_ERROR = -19;
exports.RPR_ERROR_UNSUPPORTED_SHADER_PARAMETER_TYPE = -20;
exports.RPR_ERROR_MATERIAL_STACK_OVERFLOW = -21;
exports.RPR_ERROR_INVALID_PARAMETER_TYPE = -22;
exports.RPR_ERROR_UNSUPPORTED = -23;
exports.RPR_ERROR_OPENCL_OUT_OF_HOST_MEMORY = -24;
/* rpr_parameter_type */
exports.RPR_PARAMETER_TYPE_FLOAT = 0x1;
exports.RPR_PARAMETER_TYPE_FLOAT2 = 0x2;
exports.RPR_PARAMETER_TYPE_FLOAT3 = 0x3;
exports.RPR_PARAMETER_TYPE_FLOAT4 = 0x4;
exports.RPR_PARAMETER_TYPE_IMAGE = 0x5;
exports.RPR_PARAMETER_TYPE_STRING = 0x6;
exports.RPR_PARAMETER_TYPE_SHADER = 0x7;
exports.RPR_PARAMETER_TYPE_UINT = 0x8;
/* rpr_image_type */
exports.RPR_IMAGE_TYPE_1D = 0x1;
exports.RPR_IMAGE_TYPE_2D = 0x2;
exports.RPR_IMAGE_TYPE_3D = 0x3;
/* rpr_context_type */
exports.RPR_CONTEXT_OPENCL = 1 << 0;
exports.RPR_CONTEXT_DIRECTCOMPUTE = 1 << 1;
exports.RPR_CONTEXT_REFERENCE = 1 << 2;
exports.RPR_CONTEXT_OPENGL = 1 << 3;
exports.RPR_CONTEXT_METAL = 1 << 4;
/* rpr_creation_flags */
exports.RPR_CREATION_FLAGS_ENABLE_GPU0 = 1 << 0;
exports.RPR_CREATION_FLAGS_ENABLE_GPU1 = 1 << 1;
exports.RPR_CREATION_FLAGS_ENABLE_GPU2 = 1 << 2;
exports.RPR_CREATION_FLAGS_ENABLE_GPU3 = 1 << 3;
exports.RPR_CREATION_FLAGS_ENABLE_CPU = 1 << 4;
exports.RPR_CREATION_FLAGS_ENABLE_GL_INTEROP = 1 << 5;
exports.RPR_CREATION_FLAGS_ENABLE_GPU4 = 1 << 6;
exports.RPR_CREATION_FLAGS_ENABLE_GPU5 = 1 << 7;
exports.RPR_CREATION_FLAGS_ENABLE_GPU6 = 1 << 8;
exports.RPR_CREATION_FLAGS_ENABLE_GPU7 = 1 << 9;
/* rpr_aa_filter */
exports.RPR_FILTER_BOX = 0x1;
exports.RPR_FILTER_TRIANGLE = 0x2;
exports.RPR_FILTER_GAUSSIAN = 0x3;
exports.RPR_FILTER_MITCHELL = 0x4;
exports.RPR_FILTER_LANCZOS = 0x5;
exports.RPR_FILTER_BLACKMANHARRIS = 0x6;
/* rpr_shape_type */
exports.RPR_SHAPE_TYPE_MESH = 0x1;
exports.RPR_SHAPE_TYPE_INSTANCE = 0x2;
/* rpr_light_type */
exports.RPR_LIGHT_TYPE_POINT = 0x1;
exports.RPR_LIGHT_TYPE_DIRECTIONAL = 0x2;
exports.RPR_LIGHT_TYPE_SPOT = 0x3;
exports.RPR_LIGHT_TYPE_ENVIRONMENT = 0x4;
exports.RPR_LIGHT_TYPE_SKY = 0x5;
exports.RPR_LIGHT_TYPE_IES = 0x6;
/* rpr_object_info */
exports.RPR_OBJECT_NAME = 0x777777;
/* rpr_context_info */
exports.RPR_CONTEXT_CREATION_FLAGS = 0x102;
exports.RPR_CONTEXT_CACHE_PATH = 0x103;
exports.RPR_CONTEXT_RENDER_STATUS = 0x104;
exports.RPR_CONTEXT_RENDER_STATISTICS = 0x105;
exports.RPR_CONTEXT_DEVICE_COUNT = 0x106;
exports.RPR_CONTEXT_PARAMETER_COUNT = 0x107;
exports.RPR_CONTEXT_ACTIVE_PLUGIN = 0x108;
exports.RPR_CONTEXT_SCENE = 0x109;
exports.RPR_CONTEXT_AA_CELL_SIZE = 0x10a;
exports.RPR_CONTEXT_AA_SAMPLES = 0x10b;
exports.RPR_CONTEXT_IMAGE_FILTER_TYPE = 0x10c;
exports.RPR_CONTEXT_IMAGE_FILTER_BOX_RADIUS = 0x10d;
exports.RPR_CONTEXT_IMAGE_FILTER_GAUSSIAN_RADIUS = 0x10e;
exports.RPR_CONTEXT_IMAGE_FILTER_TRIANGLE_RADIUS = 0x10f;
exports.RPR_CONTEXT_IMAGE_FILTER_MITCHELL_RADIUS = 0x110;
exports.RPR_CONTEXT_IMAGE_FILTER_LANCZOS_RADIUS = 0x111;
exports.RPR_CONTEXT_IMAGE_FILTER_BLACKMANHARRIS_RADIUS = 0x112;
exports.RPR_CONTEXT_TONE_MAPPING_TYPE = 0x113;
exports.RPR_CONTEXT_TONE_MAPPING_LINEAR_SCALE = 0x114;
exports.RPR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_SENSITIVITY = 0x115;
exports.RPR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_EXPOSURE = 0x116;
exports.RPR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_FSTOP = 0x117;
exports.RPR_CONTEXT_TONE_MAPPING_REINHARD02_PRE_SCALE = 0x118;
exports.RPR_CONTEXT_TONE_MAPPING_REINHARD02_POST_SCALE = 0x119;
exports.RPR_CONTEXT_TONE_MAPPING_REINHARD02_BURN = 0x11a;
exports.RPR_CONTEXT_MAX_RECURSION = 0x11b;
exports.RPR_CONTEXT_RAY_CAST_EPISLON = 0x11c;
exports.RPR_CONTEXT_RADIANCE_CLAMP = 0x11d;
exports.RPR_CONTEXT_X_FLIP = 0x11e;
exports.RPR_CONTEXT_Y_FLIP = 0x11f;
exports.RPR_CONTEXT_TEXTURE_GAMMA = 0x120;
exports.RPR_CONTEXT_PDF_THRESHOLD = 0x121;
exports.RPR_CONTEXT_RENDER_MODE = 0x122;
exports.RPR_CONTEXT_ROUGHNESS_CAP = 0x123;
exports.RPR_CONTEXT_DISPLAY_GAMMA = 0x124;
exports.RPR_CONTEXT_MATERIAL_STACK_SIZE = 0x125;
exports.RPR_CONTEXT_CLIPPING_PLANE = 0x126;
exports.RPR_CONTEXT_GPU0_NAME = 0x127;
exports.RPR_CONTEXT_GPU1_NAME = 0x128;
exports.RPR_CONTEXT_GPU2_NAME = 0x129;
exports.RPR_CONTEXT_GPU3_NAME = 0x12a;
exports.RPR_CONTEXT_CPU_NAME = 0x12b;
exports.RPR_CONTEXT_GPU4_NAME = 0x12c;
exports.RPR_CONTEXT_GPU5_NAME = 0x12d;
exports.RPR_CONTEXT_GPU6_NAME = 0x12e;
exports.RPR_CONTEXT_GPU7_NAME = 0x12f;
exports.RPR_CONTEXT_TONE_MAPPING_EXPONENTIAL_INTENSITY = 0x130;
exports.RPR_CONTEXT_FRAMECOUNT = 0x131;
/* last of the RPR_CONTEXT_* */
exports.RPR_CONTEXT_MAX = 0x132;
/* rpr_camera_info */
exports.RPR_CAMERA_TRANSFORM = 0x201;
exports.RPR_CAMERA_FSTOP = 0x202;
exports.RPR_CAMERA_APERTURE_BLADES = 0x203;
exports.RPR_CAMERA_RESPONSE = 0x204;
exports.RPR_CAMERA_EXPOSURE = 0x205;
exports.RPR_CAMERA_FOCAL_LENGTH = 0x206;
exports.RPR_CAMERA_SENSOR_SIZE = 0x207;
exports.RPR_CAMERA_MODE = 0x208;
exports.RPR_CAMERA_ORTHO_WIDTH = 0x209;
exports.RPR_CAMERA_ORTHO_HEIGHT = 0x20a;
exports.RPR_CAMERA_FOCUS_DISTANCE = 0x20b;
exports.RPR_CAMERA_POSITION = 0x20c;
exports.RPR_CAMERA_LOOKAT = 0x20d;
exports.RPR_CAMERA_UP = 0x20e;
exports.RPR_CAMERA_FOCAL_TILT = 0x20f;
exports.RPR_CAMERA_LENS_SHIFT = 0x210;
exports.RPR_CAMERA_IPD = 0x211;
/* rpr_image_info */
exports.RPR_IMAGE_FORMAT = 0x301;
exports.RPR_IMAGE_DESC = 0x302;
exports.RPR_IMAGE_DATA = 0x303;
exports.RPR_IMAGE_DATA_SIZEBYTE = 0x304;
exports.RPR_IMAGE_WRAP = 0x305;
/* rpr_shape_info */
exports.RPR_SHAPE_TYPE = 0x401;
exports.RPR_SHAPE_VIDMEM_USAGE = 0x402;
exports.RPR_SHAPE_TRANSFORM = 0x403;
exports.RPR_SHAPE_MATERIAL = 0x404;
exports.RPR_SHAPE_LINEAR_MOTION = 0x405;
exports.RPR_SHAPE_ANGULAR_MOTION = 0x406;
exports.RPR_SHAPE_VISIBILITY_FLAG = 0x407;
exports.RPR_SHAPE_SHADOW_FLAG = 0x408;
exports.RPR_SHAPE_SUBDIVISION_FACTOR = 0x409;
exports.RPR_SHAPE_DISPLACEMENT_SCALE = 0x40a;
exports.RPR_SHAPE_DISPLACEMENT_IMAGE = 0x40b;
exports.RPR_SHAPE_VISIBILITY_PRIMARY_ONLY_FLAG = 0x40c;
exports.RPR_SHAPE_VISIBILITY_IN_SPECULAR_FLAG = 0x40d;
exports.RPR_SHAPE_SHADOW_CATCHER_FLAG = 0x40e;
exports.RPR_SHAPE_VOLUME_MATERIAL = 0x40f;
exports.RPR_SHAPE_OBJECT_GROUP_ID = 0x410;
exports.RPR_SHAPE_SUBDIVISION_CREASEWEIGHT = 0x411;
exports.RPR_SHAPE_SUBDIVISION_BOUNDARYINTEROP = 0x412;
exports.RPR_SHAPE_MATERIAL_OVERRIDE = 0x413;
/* rpr_mesh_info */
exports.RPR_MESH_POLYGON_COUNT = 0x501;
exports.RPR_MESH_VERTEX_COUNT = 0x502;
exports.RPR_MESH_NORMAL_COUNT = 0x503;
exports.RPR_MESH_UV_COUNT = 0x504;
exports.RPR_MESH_VERTEX_ARRAY = 0x505;
exports.RPR_MESH_NORMAL_ARRAY = 0x506;
exports.RPR_MESH_UV_ARRAY = 0x507;
exports.RPR_MESH_VERTEX_INDEX_ARRAY = 0x508;
exports.RPR_MESH_NORMAL_INDEX_ARRAY = 0x509;
exports.RPR_MESH_UV_INDEX_ARRAY = 0x50a;
exports.RPR_MESH_VERTEX_STRIDE = 0x50c;
exports.RPR_MESH_NORMAL_STRIDE = 0x50d;
exports.RPR_MESH_UV_STRIDE = 0x50e;
exports.RPR_MESH_VERTEX_INDEX_STRIDE = 0x50f;
exports.RPR_MESH_NORMAL_INDEX_STRIDE = 0x510;
exports.RPR_MESH_UV_INDEX_STRIDE = 0x511;
exports.RPR_MESH_NUM_FACE_VERTICES_ARRAY = 0x512;
exports.RPR_MESH_UV2_COUNT = 0x513;
exports.RPR_MESH_UV2_ARRAY = 0x514;
exports.RPR_MESH_UV2_INDEX_ARRAY = 0x515;
exports.RPR_MESH_UV2_STRIDE = 0x516;
exports.RPR_MESH_UV2_INDEX_STRIDE = 0x517;
/* rpr_scene_info */
exports.RPR_SCENE_SHAPE_COUNT = 0x701;
exports.RPR_SCENE_LIGHT_COUNT = 0x702;
exports.RPR_SCENE_SHAPE_LIST = 0x704;
exports.RPR_SCENE_LIGHT_LIST = 0x705;
exports.RPR_SCENE_CAMERA = 0x706;
exports.RPR_SCENE_BACKGROUND_IMAGE = 0x708;
exports.RPR_SCENE_ENVIRONMENT_OVERRIDE_REFLECTION = 0x709;
exports.RPR_SCENE_ENVIRONMENT_OVERRIDE_REFRACTION = 0x70a;
exports.RPR_SCENE_ENVIRONMENT_OVERRIDE_TRANSPARENCY = 0x70b;
exports.RPR_SCENE_ENVIRONMENT_OVERRIDE_BACKGROUND = 0x70c;
exports.RPR_SCENE_AXIS_ALIGNED_BOUNDING_BOX = 0x70d;
/* rpr_light_info */
exports.RPR_LIGHT_TYPE = 0x801;
exports.RPR_LIGHT_TRANSFORM = 0x803;
/* rpr_light_info - point light */
exports.RPR_POINT_LIGHT_RADIANT_POWER = 0x804;
/* rpr_light_info - directional light */
exports.RPR_DIRECTIONAL_LIGHT_RADIANT_POWER = 0x808;
exports.RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS = 0x809;
/* rpr_light_info - spot light */
exports.RPR_SPOT_LIGHT_RADIANT_POWER = 0x80b;
exports.RPR_SPOT_LIGHT_CONE_SHAPE = 0x80c;
/* rpr_light_info - environment light */
exports.RPR_ENVIRONMENT_LIGHT_IMAGE = 0x80f;
exports.RPR_ENVIRONMENT_LIGHT_INTENSITY_SCALE = 0x810;
exports.RPR_ENVIRONMENT_LIGHT_PORTAL_LIST = 0x818;
exports.RPR_ENVIRONMENT_LIGHT_PORTAL_COUNT = 0x819;
/* rpr_light_info - sky light */
exports.RPR_SKY_LIGHT_TURBIDITY = 0x812;
exports.RPR_SKY_LIGHT_ALBEDO = 0x813;
exports.RPR_SKY_LIGHT_SCALE = 0x814;
exports.RPR_SKY_LIGHT_PORTAL_LIST = 0x820;
exports.RPR_SKY_LIGHT_PORTAL_COUNT = 0x821;
/* rpr_light_info - IES light */
exports.RPR_IES_LIGHT_RADIANT_POWER = 0x816;
exports.RPR_IES_LIGHT_IMAGE_DESC = 0x817;
/* rpr_parameter_info */
exports.RPR_PARAMETER_NAME = 0x1201;
exports.RPR_PARAMETER_NAME_STRING = 0x1202;
exports.RPR_PARAMETER_TYPE = 0x1203;
exports.RPR_PARAMETER_DESCRIPTION = 0x1204;
exports.RPR_PARAMETER_VALUE = 0x1205;
/* rpr_framebuffer_info */
exports.RPR_FRAMEBUFFER_FORMAT = 0x1301;
exports.RPR_FRAMEBUFFER_DESC = 0x1302;
exports.RPR_FRAMEBUFFER_DATA = 0x1303;
exports.RPR_FRAMEBUFFER_GL_TARGET = 0x1304;
exports.RPR_FRAMEBUFFER_GL_MIPLEVEL = 0x1305;
exports.RPR_FRAMEBUFFER_GL_TEXTURE = 0x1306;
/* rpr_mesh_polygon_info */
exports.RPR_MESH_POLYGON_VERTEX_COUNT = 0x1401;
/* rpr_mesh_polygon_vertex_info */
exports.RPR_MESH_POLYGON_VERTEX_POSITION = 0x1501;
exports.RPR_MESH_POLYGON_VERTEX_NORMAL = 0x1502;
exports.RPR_MESH_POLYGON_VERTEX_TEXCOORD = 0x1503;
/* rpr_instance_info */
exports.RPR_INSTANCE_PARENT_SHAPE = 0x1601;
/* rpr_image_format */
/* rpr_component_type */
exports.RPR_COMPONENT_TYPE_UINT8 = 0x1;
exports.RPR_COMPONENT_TYPE_FLOAT16 = 0x2;
exports.RPR_COMPONENT_TYPE_FLOAT32 = 0x3;
/* rpr_render_mode */
exports.RPR_RENDER_MODE_GLOBAL_ILLUMINATION = 0x1;
exports.RPR_RENDER_MODE_DIRECT_ILLUMINATION = 0x2;
exports.RPR_RENDER_MODE_DIRECT_ILLUMINATION_NO_SHADOW = 0x3;
exports.RPR_RENDER_MODE_WIREFRAME = 0x4;
exports.RPR_RENDER_MODE_MATERIAL_INDEX = 0x5;
exports.RPR_RENDER_MODE_POSITION = 0x6;
exports.RPR_RENDER_MODE_NORMAL = 0x7;
exports.RPR_RENDER_MODE_TEXCOORD = 0x8;
exports.RPR_RENDER_MODE_AMBIENT_OCCLUSION = 0x9;
/* rpr_camera_mode */
exports.RPR_CAMERA_MODE_PERSPECTIVE = 0x1;
exports.RPR_CAMERA_MODE_ORTHOGRAPHIC = 0x2;
exports.RPR_CAMERA_MODE_LATITUDE_LONGITUDE_360 = 0x3;
exports.RPR_CAMERA_MODE_LATITUDE_LONGITUDE_STEREO = 0x4;
exports.RPR_CAMERA_MODE_CUBEMAP = 0x5;
exports.RPR_CAMERA_MODE_CUBEMAP_STEREO = 0x6;
/* rpr_tonemapping_operator */
exports.RPR_TONEMAPPING_OPERATOR_NONE = 0x0;
exports.RPR_TONEMAPPING_OPERATOR_LINEAR = 0x1;
exports.RPR_TONEMAPPING_OPERATOR_PHOTOLINEAR = 0x2;
exports.RPR_TONEMAPPING_OPERATOR_AUTOLINEAR = 0x3;
exports.RPR_TONEMAPPING_OPERATOR_MAXWHITE = 0x4;
exports.RPR_TONEMAPPING_OPERATOR_REINHARD02 = 0x5;
exports.RPR_TONEMAPPING_OPERATOR_EXPONENTIAL = 0x6;
/* rpr_volume_type */
exports.RPR_VOLUME_TYPE_NONE = 0xffff;
exports.RPR_VOLUME_TYPE_HOMOGENEOUS = 0x0;
exports.RPR_VOLUME_TYPE_HETEROGENEOUS = 0x1;
/* rpr_material_node_info*/
exports.RPR_MATERIAL_NODE_TYPE = 0x1101;
exports.RPR_MATERIAL_NODE_SYSTEM = 0x1102;
exports.RPR_MATERIAL_NODE_INPUT_COUNT = 0x1103;
/* rpr_material_node_input_info */
exports.RPR_MATERIAL_NODE_INPUT_NAME = 0x1103;
exports.RPR_MATERIAL_NODE_INPUT_NAME_STRING = 0x1104;
exports.RPR_MATERIAL_NODE_INPUT_DESCRIPTION = 0x1105;
exports.RPR_MATERIAL_NODE_INPUT_VALUE = 0x1106;
exports.RPR_MATERIAL_NODE_INPUT_TYPE = 0x1107;
/* rpr_material_node_type */
exports.RPR_MATERIAL_NODE_DIFFUSE = 0x1;
exports.RPR_MATERIAL_NODE_MICROFACET = 0x2;
exports.RPR_MATERIAL_NODE_REFLECTION = 0x3;
exports.RPR_MATERIAL_NODE_REFRACTION = 0x4;
exports.RPR_MATERIAL_NODE_MICROFACET_REFRACTION = 0x5;
exports.RPR_MATERIAL_NODE_TRANSPARENT = 0x6;
exports.RPR_MATERIAL_NODE_EMISSIVE = 0x7;
exports.RPR_MATERIAL_NODE_WARD = 0x8;
exports.RPR_MATERIAL_NODE_ADD = 0x9;
exports.RPR_MATERIAL_NODE_BLEND = 0xa;
exports.RPR_MATERIAL_NODE_ARITHMETIC = 0xb;
exports.RPR_MATERIAL_NODE_FRESNEL = 0xc;
exports.RPR_MATERIAL_NODE_NORMAL_MAP = 0xd;
exports.RPR_MATERIAL_NODE_IMAGE_TEXTURE = 0xe;
exports.RPR_MATERIAL_NODE_NOISE2D_TEXTURE = 0xf;
exports.RPR_MATERIAL_NODE_DOT_TEXTURE = 0x10;
exports.RPR_MATERIAL_NODE_GRADIENT_TEXTURE = 0x11;
exports.RPR_MATERIAL_NODE_CHECKER_TEXTURE = 0x12;
exports.RPR_MATERIAL_NODE_CONSTANT_TEXTURE = 0x13;
exports.RPR_MATERIAL_NODE_INPUT_LOOKUP = 0x14;
exports.RPR_MATERIAL_NODE_STANDARD = 0x15;
exports.RPR_MATERIAL_NODE_BLEND_VALUE = 0x16;
exports.RPR_MATERIAL_NODE_PASSTHROUGH = 0x17;
exports.RPR_MATERIAL_NODE_ORENNAYAR = 0x18;
exports.RPR_MATERIAL_NODE_FRESNEL_SCHLICK = 0x19;
exports.RPR_MATERIAL_NODE_DIFFUSE_REFRACTION = 0x1b;
exports.RPR_MATERIAL_NODE_BUMP_MAP = 0x1c;
exports.RPR_MATERIAL_NODE_VOLUME = 0x1d;
/* rpr_material_node_input */
exports.RPR_MATERIAL_INPUT_COLOR = 0x0;
exports.RPR_MATERIAL_INPUT_COLOR0 = 0x1;
exports.RPR_MATERIAL_INPUT_COLOR1 = 0x2;
exports.RPR_MATERIAL_INPUT_NORMAL = 0x3;
exports.RPR_MATERIAL_INPUT_UV = 0x4;
exports.RPR_MATERIAL_INPUT_DATA = 0x5;
exports.RPR_MATERIAL_INPUT_ROUGHNESS = 0x6;
exports.RPR_MATERIAL_INPUT_IOR = 0x7;
exports.RPR_MATERIAL_INPUT_ROUGHNESS_X = 0x8;
exports.RPR_MATERIAL_INPUT_ROUGHNESS_Y = 0x9;
exports.RPR_MATERIAL_INPUT_ROTATION = 0xa;
exports.RPR_MATERIAL_INPUT_WEIGHT = 0xb;
exports.RPR_MATERIAL_INPUT_OP = 0xc;
exports.RPR_MATERIAL_INPUT_INVEC = 0xd;
exports.RPR_MATERIAL_INPUT_UV_SCALE = 0xe;
exports.RPR_MATERIAL_INPUT_VALUE = 0xf;
exports.RPR_MATERIAL_INPUT_REFLECTANCE = 0x10;
exports.RPR_MATERIAL_INPUT_SCALE = 0x11;
exports.RPR_MATERIAL_INPUT_SCATTERING = 0x12;
exports.RPR_MATERIAL_INPUT_ABSORBTION = 0x13;
exports.RPR_MATERIAL_INPUT_EMISSION = 0x14;
exports.RPR_MATERIAL_INPUT_G = 0x15;
exports.RPR_MATERIAL_INPUT_MULTISCATTER = 0x16;
exports.RPR_MATERIAL_INPUT_COLOR2 = 0x17;
exports.RPR_MATERIAL_INPUT_COLOR3 = 0x18;
exports.RPR_MATERIAL_INPUT_MAX = 0x19;
exports.RPR_MATERIAL_STANDARD_INPUT_DIFFUSE_COLOR = 0x112;
exports.RPR_MATERIAL_STANDARD_INPUT_DIFFUSE_NORMAL = 0x113;
exports.RPR_MATERIAL_STANDARD_INPUT_GLOSSY_COLOR = 0x114;
exports.RPR_MATERIAL_STANDARD_INPUT_GLOSSY_NORMAL = 0x115;
exports.RPR_MATERIAL_STANDARD_INPUT_GLOSSY_ROUGHNESS_X = 0x116;
exports.RPR_MATERIAL_STANDARD_INPUT_CLEARCOAT_COLOR = 0x117;
exports.RPR_MATERIAL_STANDARD_INPUT_CLEARCOAT_NORMAL = 0x118;
exports.RPR_MATERIAL_STANDARD_INPUT_REFRACTION_COLOR = 0x119;
exports.RPR_MATERIAL_STANDARD_INPUT_REFRACTION_NORMAL = 0x11a;
exports.RPR_MATERIAL_STANDARD_INPUT_REFRACTION_IOR = 0x11c;
exports.RPR_MATERIAL_STANDARD_INPUT_DIFFUSE_TO_REFRACTION_WEIGHT = 0x11d;
exports.RPR_MATERIAL_STANDARD_INPUT_GLOSSY_TO_DIFFUSE_WEIGHT = 0x11e;
exports.RPR_MATERIAL_STANDARD_INPUT_CLEARCOAT_TO_GLOSSY_WEIGHT = 0x11f;
exports.RPR_MATERIAL_STANDARD_INPUT_TRANSPARENCY = 0x120;
exports.RPR_MATERIAL_STANDARD_INPUT_TRANSPARENCY_COLOR = 0x121;
exports.RPR_MATERIAL_STANDARD_INPUT_REFRACTION_ROUGHNESS = 0x122;
exports.RPR_MATERIAL_STANDARD_INPUT_GLOSSY_ROUGHNESS_Y = 0x123;
exports.RPR_MATERIAL_INPUT_RASTER_METALLIC = 0x901;
exports.RPR_MATERIAL_INPUT_RASTER_ROUGHNESS = 0x902;
exports.RPR_MATERIAL_INPUT_RASTER_SUBSURFACE = 0x903;
exports.RPR_MATERIAL_INPUT_RASTER_ANISOTROPIC = 0x904;
exports.RPR_MATERIAL_INPUT_RASTER_SPECULAR = 0x905;
exports.RPR_MATERIAL_INPUT_RASTER_SPECULARTINT = 0x906;
exports.RPR_MATERIAL_INPUT_RASTER_SHEEN = 0x907;
exports.RPR_MATERIAL_INPUT_RASTER_SHEENTINT = 0x908;
exports.RPR_MATERIAL_INPUT_RASTER_CLEARCOAT = 0x90a;
exports.RPR_MATERIAL_INPUT_RASTER_CLEARCOATGLOSS = 0x90b;
exports.RPR_MATERIAL_INPUT_RASTER_COLOR = 0x90c;
exports.RPR_MATERIAL_INPUT_RASTER_NORMAL = 0x90d;
/* rpr_material_node_arithmetic_operation */
exports.RPR_MATERIAL_NODE_OP_ADD = 0x00;
exports.RPR_MATERIAL_NODE_OP_SUB = 0x01;
exports.RPR_MATERIAL_NODE_OP_MUL = 0x02;
exports.RPR_MATERIAL_NODE_OP_DIV = 0x03;
exports.RPR_MATERIAL_NODE_OP_SIN = 0x04;
exports.RPR_MATERIAL_NODE_OP_COS = 0x05;
exports.RPR_MATERIAL_NODE_OP_TAN = 0x06;
exports.RPR_MATERIAL_NODE_OP_SELECT_X = 0x07;
exports.RPR_MATERIAL_NODE_OP_SELECT_Y = 0x08;
exports.RPR_MATERIAL_NODE_OP_SELECT_Z = 0x09;
exports.RPR_MATERIAL_NODE_OP_SELECT_W = 0x0a;
exports.RPR_MATERIAL_NODE_OP_COMBINE = 0x0b;
exports.RPR_MATERIAL_NODE_OP_DOT3 = 0x0c;
exports.RPR_MATERIAL_NODE_OP_DOT4 = 0x0d;
exports.RPR_MATERIAL_NODE_OP_CROSS3 = 0x0e;
exports.RPR_MATERIAL_NODE_OP_LENGTH3 = 0x0f;
exports.RPR_MATERIAL_NODE_OP_NORMALIZE3 = 0x10;
exports.RPR_MATERIAL_NODE_OP_POW = 0x11;
exports.RPR_MATERIAL_NODE_OP_ACOS = 0x12;
exports.RPR_MATERIAL_NODE_OP_ASIN = 0x13;
exports.RPR_MATERIAL_NODE_OP_ATAN = 0x14;
exports.RPR_MATERIAL_NODE_OP_AVERAGE_XYZ = 0x15;
exports.RPR_MATERIAL_NODE_OP_AVERAGE = 0x16;
exports.RPR_MATERIAL_NODE_OP_MIN = 0x17;
exports.RPR_MATERIAL_NODE_OP_MAX = 0x18;
exports.RPR_MATERIAL_NODE_OP_FLOOR = 0x19;
exports.RPR_MATERIAL_NODE_OP_MOD = 0x1a;
exports.RPR_MATERIAL_NODE_OP_ABS = 0x1b;
exports.RPR_MATERIAL_NODE_OP_SHUFFLE_YZWX = 0x1c;
exports.RPR_MATERIAL_NODE_OP_SHUFFLE_ZWXY = 0x1d;
exports.RPR_MATERIAL_NODE_OP_SHUFFLE_WXYZ = 0x1e;
exports.RPR_MATERIAL_NODE_OP_MAT_MUL = 0x1f;
/* rpr_material_node_lookup_value */
exports.RPR_MATERIAL_NODE_LOOKUP_UV = 0x0;
exports.RPR_MATERIAL_NODE_LOOKUP_N = 0x1;
exports.RPR_MATERIAL_NODE_LOOKUP_P = 0x2;
exports.RPR_MATERIAL_NODE_LOOKUP_INVEC = 0x3;
exports.RPR_MATERIAL_NODE_LOOKUP_OUTVEC = 0x4;
exports.RPR_MATERIAL_NODE_LOOKUP_UV1 = 0x5;
/* rpr_post_effect_info */
exports.RPR_POST_EFFECT_TYPE = 0x0;
exports.RPR_POST_EFFECT_PARAMETER_COUNT = 0x1;
/* rpr_post_effect_type - white balance */
exports.RPR_POST_EFFECT_WHITE_BALANCE_COLOR_SPACE = 0x1;
exports.RPR_POST_EFFECT_WHITE_BALANCE_COLOR_TEMPERATURE = 0x2;
/* rpr_post_effect_type - simple tonemap */
exports.RPR_POST_EFFECT_SIMPLE_TONEMAP_EXPOSURE = 0x1;
exports.RPR_POST_EFFECT_SIMPLE_TONEMAP_CONTRAST = 0x2;
/*rpr_aov*/
exports.RPR_AOV_COLOR = 0x0;
exports.RPR_AOV_OPACITY = 0x1;
exports.RPR_AOV_WORLD_COORDINATE = 0x2;
exports.RPR_AOV_UV = 0x3;
exports.RPR_AOV_MATERIAL_IDX = 0x4;
exports.RPR_AOV_GEOMETRIC_NORMAL = 0x5;
exports.RPR_AOV_SHADING_NORMAL = 0x6;
exports.RPR_AOV_DEPTH = 0x7;
exports.RPR_AOV_OBJECT_ID = 0x8;
exports.RPR_AOV_OBJECT_GROUP_ID = 0x9;
exports.RPR_AOV_MAX = 0xa;
/*rpr_post_effect_type*/
exports.RPR_POST_EFFECT_TONE_MAP = 0x0;
exports.RPR_POST_EFFECT_WHITE_BALANCE = 0x1;
exports.RPR_POST_EFFECT_SIMPLE_TONEMAP = 0x2;
exports.RPR_POST_EFFECT_NORMALIZATION = 0x3;
exports.RPR_POST_EFFECT_GAMMA_CORRECTION = 0x4;
/*rpr_color_space*/
exports.RPR_COLOR_SPACE_SRGB = 0x1;
exports.RPR_COLOR_SPACE_ADOBE_RGB = 0x2;
exports.RPR_COLOR_SPACE_REC2020 = 0x3;
exports.RPR_COLOR_SPACE_DCIP3 = 0x4;
/* rpr_material_node_type */
exports.RPR_MATERIAL_NODE_INPUT_TYPE_FLOAT4 = 0x1;
exports.RPR_MATERIAL_NODE_INPUT_TYPE_UINT = 0x2;
exports.RPR_MATERIAL_NODE_INPUT_TYPE_NODE = 0x3;
exports.RPR_MATERIAL_NODE_INPUT_TYPE_IMAGE = 0x4;
/* Additional Raster context properties ("raster.shadows.filter") */
exports.RPR_RASTER_SHADOWS_FILTER_NONE = 0x90e;
exports.RPR_RASTER_SHADOWS_FILTER_PCF = 0x90f;
exports.RPR_RASTER_SHADOWS_FILTER_PCSS = 0x910;
/* Additional Raster context properties ("raster.shadows.sampling") */
exports.RPR_RASTER_SHADOWS_SAMPLING_BILINEAR = 0x911;
exports.RPR_RASTER_SHADOWS_SAMPLING_HAMMERSLEY = 0x912;
exports.RPR_RASTER_SHADOWS_SAMPLING_MULTIJITTERED = 0x913;
/* rpr_subdiv_boundary_interfop_type */
exports.RPR_SUBDIV_BOUNDARY_INTERFOP_TYPE_EDGE_AND_CORNER = 0x1;
exports.RPR_SUBDIV_BOUNDARY_INTERFOP_TYPE_EDGE_ONLY = 0x2;
/* rpr_image_wrap_type */
exports.RPR_IMAGE_WRAP_TYPE_REPEAT = 0x1;
exports.RPR_IMAGE_WRAP_TYPE_MIRRORED_REPEAT = 0x2;
exports.RPR_IMAGE_WRAP_TYPE_CLAMP_TO_EDGE = 0x3;
exports.RPR_IMAGE_WRAP_TYPE_CLAMP_TO_BORDER = 0x4;
/* Constants */
exports.RPR_MAX_AA_SAMPLES = 32;
exports.RPR_MAX_AA_GRID_SIZE = 16;
/* rpr_bool */
exports.RPR_FALSE = 0;
exports.RPR_TRUE = 1;
/***************compatibility part***************/
exports.FR_API_VERSION = 0x010000252;
exports.FR_SUCCESS = 0;
exports.FR_ERROR_COMPUTE_API_NOT_SUPPORTED = -1;
exports.FR_ERROR_OUT_OF_SYSTEM_MEMORY = -2;
exports.FR_ERROR_OUT_OF_VIDEO_MEMORY = -3;
exports.FR_ERROR_INVALID_LIGHTPATH_EXPR = -5;
exports.FR_ERROR_INVALID_IMAGE = -6;
exports.FR_ERROR_INVALID_AA_METHOD = -7;
exports.FR_ERROR_UNSUPPORTED_IMAGE_FORMAT = -8;
exports.FR_ERROR_INVALID_GL_TEXTURE = -9;
exports.FR_ERROR_INVALID_CL_IMAGE = -10;
exports.FR_ERROR_INVALID_OBJECT = -11;
exports.FR_ERROR_INVALID_PARAMETER = -12;
exports.FR_ERROR_INVALID_TAG = -13;
exports.FR_ERROR_INVALID_LIGHT = -14;
exports.FR_ERROR_INVALID_CONTEXT = -15;
exports.FR_ERROR_UNIMPLEMENTED = -16;
exports.FR_ERROR_INVALID_API_VERSION = -17;
exports.FR_ERROR_INTERNAL_ERROR = -18;
exports.FR_ERROR_IO_ERROR = -19;
exports.FR_ERROR_UNSUPPORTED_SHADER_PARAMETER_TYPE = -20;
exports.FR_ERROR_MATERIAL_STACK_OVERFLOW = -21;
exports.FR_ERROR_INVALID_PARAMETER_TYPE = -22;
exports.FR_ERROR_UNSUPPORTED = -23;
exports.FR_ERROR_OPENCL_OUT_OF_HOST_MEMORY = -24;
exports.FR_PARAMETER_TYPE_FLOAT = 0x1;
exports.FR_PARAMETER_TYPE_FLOAT2 = 0x2;
exports.FR_PARAMETER_TYPE_FLOAT3 = 0x3;
exports.FR_PARAMETER_TYPE_FLOAT4 = 0x4;
exports.FR_PARAMETER_TYPE_IMAGE = 0x5;
exports.FR_PARAMETER_TYPE_STRING = 0x6;
exports.FR_PARAMETER_TYPE_SHADER = 0x7;
exports.FR_PARAMETER_TYPE_UINT = 0x8;
exports.FR_IMAGE_TYPE_1D = 0x1;
exports.FR_IMAGE_TYPE_2D = 0x2;
exports.FR_IMAGE_TYPE_3D = 0x3;
exports.FR_CONTEXT_OPENCL = 1 << 0;
exports.FR_CONTEXT_DIRECTCOMPUTE = 1 << 1;
exports.FR_CONTEXT_REFERENCE = 1 << 2;
exports.FR_CONTEXT_OPENGL = 1 << 3;
exports.FR_CONTEXT_METAL = 1 << 4;
exports.FR_CREATION_FLAGS_ENABLE_GPU0 = 1 << 0;
exports.FR_CREATION_FLAGS_ENABLE_GPU1 = 1 << 1;
exports.FR_CREATION_FLAGS_ENABLE_GPU2 = 1 << 2;
exports.FR_CREATION_FLAGS_ENABLE_GPU3 = 1 << 3;
exports.FR_CREATION_FLAGS_ENABLE_CPU = 1 << 4;
exports.FR_CREATION_FLAGS_ENABLE_GL_INTEROP = 1 << 5;
exports.FR_CREATION_FLAGS_ENABLE_GPU4 = 1 << 6;
exports.FR_CREATION_FLAGS_ENABLE_GPU5 = 1 << 7;
exports.FR_CREATION_FLAGS_ENABLE_GPU6 = 1 << 8;
exports.FR_CREATION_FLAGS_ENABLE_GPU7 = 1 << 9;
exports.FR_FILTER_BOX = 0x1;
exports.FR_FILTER_TRIANGLE = 0x2;
exports.FR_FILTER_GAUSSIAN = 0x3;
exports.FR_FILTER_MITCHELL = 0x4;
exports.FR_FILTER_LANCZOS = 0x5;
exports.FR_FILTER_BLACKMANHARRIS = 0x6;
exports.FR_SHAPE_TYPE_MESH = 0x1;
exports.FR_SHAPE_TYPE_INSTANCE = 0x2;
exports.FR_LIGHT_TYPE_POINT = 0x1;
exports.FR_LIGHT_TYPE_DIRECTIONAL = 0x2;
exports.FR_LIGHT_TYPE_SPOT = 0x3;
exports.FR_LIGHT_TYPE_ENVIRONMENT = 0x4;
exports.FR_LIGHT_TYPE_SKY = 0x5;
exports.FR_LIGHT_TYPE_IES = 0x6;
exports.FR_OBJECT_NAME = 0x777777;
exports.FR_CONTEXT_CREATION_FLAGS = 0x102;
exports.FR_CONTEXT_CACHE_PATH = 0x103;
exports.FR_CONTEXT_RENDER_STATUS = 0x104;
exports.FR_CONTEXT_RENDER_STATISTICS = 0x105;
exports.FR_CONTEXT_DEVICE_COUNT = 0x106;
exports.FR_CONTEXT_PARAMETER_COUNT = 0x107;
exports.FR_CONTEXT_ACTIVE_PLUGIN = 0x108;
exports.FR_CONTEXT_SCENE = 0x109;
exports.FR_CONTEXT_AA_CELL_SIZE = 0x10a;
exports.FR_CONTEXT_AA_SAMPLES = 0x10b;
exports.FR_CONTEXT_IMAGE_FILTER_TYPE = 0x10c;
exports.FR_CONTEXT_IMAGE_FILTER_BOX_RADIUS = 0x10d;
exports.FR_CONTEXT_IMAGE_FILTER_GAUSSIAN_RADIUS = 0x10e;
exports.FR_CONTEXT_IMAGE_FILTER_TRIANGLE_RADIUS = 0x10f;
exports.FR_CONTEXT_IMAGE_FILTER_MITCHELL_RADIUS = 0x110;
exports.FR_CONTEXT_IMAGE_FILTER_LANCZOS_RADIUS = 0x111;
exports.FR_CONTEXT_IMAGE_FILTER_BLACKMANHARRIS_RADIUS = 0x112;
exports.FR_CONTEXT_TONE_MAPPING_TYPE = 0x113;
exports.FR_CONTEXT_TONE_MAPPING_LINEAR_SCALE = 0x114;
exports.FR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_SENSITIVITY = 0x115;
exports.FR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_EXPOSURE = 0x116;
exports.FR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_FSTOP = 0x117;
exports.FR_CONTEXT_TONE_MAPPING_REINHARD02_PRE_SCALE = 0x118;
exports.FR_CONTEXT_TONE_MAPPING_REINHARD02_POST_SCALE = 0x119;
exports.FR_CONTEXT_TONE_MAPPING_REINHARD02_BURN = 0x11a;
exports.FR_CONTEXT_MAX_RECURSION = 0x11b;
exports.FR_CONTEXT_RAY_CAST_EPISLON = 0x11c;
exports.FR_CONTEXT_RADIANCE_CLAMP = 0x11d;
exports.FR_CONTEXT_X_FLIP = 0x11e;
exports.FR_CONTEXT_Y_FLIP = 0x11f;
exports.FR_CONTEXT_TEXTURE_GAMMA = 0x120;
exports.FR_CONTEXT_PDF_THRESHOLD = 0x121;
exports.FR_CONTEXT_RENDER_MODE = 0x122;
exports.FR_CONTEXT_ROUGHNESS_CAP = 0x123;
exports.FR_CONTEXT_DISPLAY_GAMMA = 0x124;
exports.FR_CONTEXT_MATERIAL_STACK_SIZE = 0x125;
exports.FR_CONTEXT_CLIPPING_PLANE = 0x126;
exports.FR_CONTEXT_GPU0_NAME = 0x127;
exports.FR_CONTEXT_GPU1_NAME = 0x128;
exports.FR_CONTEXT_GPU2_NAME = 0x129;
exports.FR_CONTEXT_GPU3_NAME = 0x12a;
exports.FR_CONTEXT_CPU_NAME = 0x12b;
exports.FR_CONTEXT_GPU4_NAME = 0x12c;
exports.FR_CONTEXT_GPU5_NAME = 0x12d;
exports.FR_CONTEXT_GPU6_NAME = 0x12e;
exports.FR_CONTEXT_GPU7_NAME = 0x12f;
exports.FR_CONTEXT_TONE_MAPPING_EXPONENTIAL_INTENSITY = 0x130;
exports.FR_CONTEXT_FRAMECOUNT = 0x131;
exports.FR_CONTEXT_MAX = 0x132;
exports.FR_CAMERA_TRANSFORM = 0x201;
exports.FR_CAMERA_FSTOP = 0x202;
exports.FR_CAMERA_APERTURE_BLADES = 0x203;
exports.FR_CAMERA_RESPONSE = 0x204;
exports.FR_CAMERA_EXPOSURE = 0x205;
exports.FR_CAMERA_FOCAL_LENGTH = 0x206;
exports.FR_CAMERA_SENSOR_SIZE = 0x207;
exports.FR_CAMERA_MODE = 0x208;
exports.FR_CAMERA_ORTHO_WIDTH = 0x209;
exports.FR_CAMERA_ORTHO_HEIGHT = 0x20a;
exports.FR_CAMERA_FOCUS_DISTANCE = 0x20b;
exports.FR_CAMERA_POSITION = 0x20c;
exports.FR_CAMERA_LOOKAT = 0x20d;
exports.FR_CAMERA_UP = 0x20e;
exports.FR_CAMERA_FOCAL_TILT = 0x20f;
exports.FR_CAMERA_LENS_SHIFT = 0x210;
exports.FR_CAMERA_IPD = 0x211;
exports.FR_IMAGE_FORMAT = 0x301;
exports.FR_IMAGE_DESC = 0x302;
exports.FR_IMAGE_DATA = 0x303;
exports.FR_IMAGE_DATA_SIZEBYTE = 0x304;
exports.FR_IMAGE_WRAP = 0x305;
exports.FR_SHAPE_TYPE = 0x401;
exports.FR_SHAPE_VIDMEM_USAGE = 0x402;
exports.FR_SHAPE_TRANSFORM = 0x403;
exports.FR_SHAPE_MATERIAL = 0x404;
exports.FR_SHAPE_LINEAR_MOTION = 0x405;
exports.FR_SHAPE_ANGULAR_MOTION = 0x406;
exports.FR_SHAPE_VISIBILITY_FLAG = 0x407;
exports.FR_SHAPE_SHADOW_FLAG = 0x408;
exports.FR_SHAPE_SUBDIVISION_FACTOR = 0x409;
exports.FR_SHAPE_DISPLACEMENT_SCALE = 0x40a;
exports.FR_SHAPE_DISPLACEMENT_IMAGE = 0x40b;
exports.FR_SHAPE_VISIBILITY_PRIMARY_ONLY_FLAG = 0x40c;
exports.FR_SHAPE_VISIBILITY_IN_SPECULAR_FLAG = 0x40d;
exports.FR_SHAPE_SHADOW_CATCHER_FLAG = 0x40e;
exports.FR_SHAPE_VOLUME_MATERIAL = 0x40f;
exports.FR_SHAPE_OBJECT_GROUP_ID = 0x410;
exports.FR_SHAPE_SUBDIVISION_CREASEWEIGHT = 0x411;
exports.FR_SHAPE_SUBDIVISION_BOUNDARYINTEROP = 0x412;
exports.FR_SHAPE_MATERIAL_OVERRIDE = 0x413;
exports.FR_MESH_POLYGON_COUNT = 0x501;
exports.FR_MESH_VERTEX_COUNT = 0x502;
exports.FR_MESH_NORMAL_COUNT = 0x503;
exports.FR_MESH_UV_COUNT = 0x504;
exports.FR_MESH_VERTEX_ARRAY = 0x505;
exports.FR_MESH_NORMAL_ARRAY = 0x506;
exports.FR_MESH_UV_ARRAY = 0x507;
exports.FR_MESH_VERTEX_INDEX_ARRAY = 0x508;
exports.FR_MESH_NORMAL_INDEX_ARRAY = 0x509;
exports.FR_MESH_UV_INDEX_ARRAY = 0x50a;
exports.FR_MESH_VERTEX_STRIDE = 0x50c;
exports.FR_MESH_NORMAL_STRIDE = 0x50d;
exports.FR_MESH_UV_STRIDE = 0x50e;
exports.FR_MESH_VERTEX_INDEX_STRIDE = 0x50f;
exports.FR_MESH_NORMAL_INDEX_STRIDE = 0x510;
exports.FR_MESH_UV_INDEX_STRIDE = 0x511;
exports.FR_MESH_NUM_FACE_VERTICES_ARRAY = 0x512;
exports.FR_MESH_UV2_COUNT = 0x513;
exports.FR_MESH_UV2_ARRAY = 0x514;
exports.FR_MESH_UV2_INDEX_ARRAY = 0x515;
exports.FR_MESH_UV2_STRIDE = 0x516;
exports.FR_MESH_UV2_INDEX_STRIDE = 0x517;
exports.FR_SCENE_SHAPE_COUNT = 0x701;
exports.FR_SCENE_LIGHT_COUNT = 0x702;
exports.FR_SCENE_SHAPE_LIST = 0x704;
exports.FR_SCENE_LIGHT_LIST = 0x705;
exports.FR_SCENE_CAMERA = 0x706;
exports.FR_SCENE_BACKGROUND_IMAGE = 0x708;
exports.FR_SCENE_ENVIRONMENT_OVERRIDE_REFLECTION = 0x709;
exports.FR_SCENE_ENVIRONMENT_OVERRIDE_REFRACTION = 0x70a;
exports.FR_SCENE_ENVIRONMENT_OVERRIDE_TRANSPARENCY = 0x70b;
exports.FR_SCENE_ENVIRONMENT_OVERRIDE_BACKGROUND = 0x70c;
exports.FR_SCENE_AXIS_ALIGNED_BOUNDING_BOX = 0x70d;
exports.FR_LIGHT_TYPE = 0x801;
exports.FR_LIGHT_TRANSFORM = 0x803;
exports.FR_POINT_LIGHT_RADIANT_POWER = 0x804;
exports.FR_DIRECTIONAL_LIGHT_RADIANT_POWER = 0x808;
exports.FR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS = 0x809;
exports.FR_SPOT_LIGHT_RADIANT_POWER = 0x80b;
exports.FR_SPOT_LIGHT_CONE_SHAPE = 0x80c;
exports.FR_ENVIRONMENT_LIGHT_IMAGE = 0x80f;
exports.FR_ENVIRONMENT_LIGHT_INTENSITY_SCALE = 0x810;
exports.FR_ENVIRONMENT_LIGHT_PORTAL_LIST = 0x818;
exports.FR_ENVIRONMENT_LIGHT_PORTAL_COUNT = 0x819;
exports.FR_SKY_LIGHT_TURBIDITY = 0x812;
exports.FR_SKY_LIGHT_ALBEDO = 0x813;
exports.FR_SKY_LIGHT_SCALE = 0x814;
exports.FR_SKY_LIGHT_PORTAL_LIST = 0x820;
exports.FR_SKY_LIGHT_PORTAL_COUNT = 0x821;
exports.FR_IES_LIGHT_RADIANT_POWER = 0x816;
exports.FR_IES_LIGHT_IMAGE_DESC = 0x817;
exports.FR_PARAMETER_NAME = 0x1201;
exports.FR_PARAMETER_NAME_STRING = 0x1202;
exports.FR_PARAMETER_TYPE = 0x1203;
exports.FR_PARAMETER_DESCRIPTION = 0x1204;
exports.FR_PARAMETER_VALUE = 0x1205;
exports.FR_FRAMEBUFFER_FORMAT = 0x1301;
exports.FR_FRAMEBUFFER_DESC = 0x1302;
exports.FR_FRAMEBUFFER_DATA = 0x1303;
exports.FR_FRAMEBUFFER_GL_TARGET = 0x1304;
exports.FR_FRAMEBUFFER_GL_MIPLEVEL = 0x1305;
exports.FR_FRAMEBUFFER_GL_TEXTURE = 0x1306;
exports.FR_MESH_POLYGON_VERTEX_COUNT = 0x1401;
exports.FR_MESH_POLYGON_VERTEX_POSITION = 0x1501;
exports.FR_MESH_POLYGON_VERTEX_NORMAL = 0x1502;
exports.FR_MESH_POLYGON_VERTEX_TEXCOORD = 0x1503;
exports.FR_INSTANCE_PARENT_SHAPE = 0x1601;
exports.FR_COMPONENT_TYPE_UINT8 = 0x1;
exports.FR_COMPONENT_TYPE_FLOAT16 = 0x2;
exports.FR_COMPONENT_TYPE_FLOAT32 = 0x3;
exports.FR_RENDER_MODE_GLOBAL_ILLUMINATION = 0x1;
exports.FR_RENDER_MODE_DIRECT_ILLUMINATION = 0x2;
exports.FR_RENDER_MODE_DIRECT_ILLUMINATION_NO_SHADOW = 0x3;
exports.FR_RENDER_MODE_WIREFRAME = 0x4;
exports.FR_RENDER_MODE_MATERIAL_INDEX = 0x5;
exports.FR_RENDER_MODE_POSITION = 0x6;
exports.FR_RENDER_MODE_NORMAL = 0x7;
exports.FR_RENDER_MODE_TEXCOORD = 0x8;
exports.FR_RENDER_MODE_AMBIENT_OCCLUSION = 0x9;
exports.FR_CAMERA_MODE_PERSPECTIVE = 0x1;
exports.FR_CAMERA_MODE_ORTHOGRAPHIC = 0x2;
exports.FR_CAMERA_MODE_LATITUDE_LONGITUDE_360 = 0x3;
exports.FR_CAMERA_MODE_LATITUDE_LONGITUDE_STEREO = 0x4;
exports.FR_CAMERA_MODE_CUBEMAP = 0x5;
exports.FR_CAMERA_MODE_CUBEMAP_STEREO = 0x6;
exports.FR_TONEMAPPING_OPERATOR_NONE = 0x0;
exports.FR_TONEMAPPING_OPERATOR_LINEAR = 0x1;
exports.FR_TONEMAPPING_OPERATOR_PHOTOLINEAR = 0x2;
exports.FR_TONEMAPPING_OPERATOR_AUTOLINEAR = 0x3;
exports.FR_TONEMAPPING_OPERATOR_MAXWHITE = 0x4;
exports.FR_TONEMAPPING_OPERATOR_REINHARD02 = 0x5;
exports.FR_TONEMAPPING_OPERATOR_EXPONENTIAL = 0x6;
exports.FR_VOLUME_TYPE_NONE = 0xffff;
exports.FR_VOLUME_TYPE_HOMOGENEOUS = 0x0;
exports.FR_VOLUME_TYPE_HETEROGENEOUS = 0x1;
exports.FR_MATERIAL_NODE_TYPE = 0x1101;
exports.FR_MATERIAL_NODE_SYSTEM = 0x1102;
exports.FR_MATERIAL_NODE_INPUT_COUNT = 0x1103;
exports.FR_MATERIAL_NODE_INPUT_NAME = 0x1103;
exports.FR_MATERIAL_NODE_INPUT_NAME_STRING = 0x1104;
exports.FR_MATERIAL_NODE_INPUT_DESCRIPTION = 0x1105;
exports.FR_MATERIAL_NODE_INPUT_VALUE = 0x1106;
exports.FR_MATERIAL_NODE_INPUT_TYPE = 0x1107;
exports.FR_MATERIAL_NODE_DIFFUSE = 0x1;
exports.FR_MATERIAL_NODE_MICROFACET = 0x2;
exports.FR_MATERIAL_NODE_REFLECTION = 0x3;
exports.FR_MATERIAL_NODE_REFRACTION = 0x4;
exports.FR_MATERIAL_NODE_MICROFACET_REFRACTION = 0x5;
exports.FR_MATERIAL_NODE_TRANSPARENT = 0x6;
exports.FR_MATERIAL_NODE_EMISSIVE = 0x7;
exports.FR_MATERIAL_NODE_WARD = 0x8;
exports.FR_MATERIAL_NODE_ADD = 0x9;
exports.FR_MATERIAL_NODE_BLEND = 0xa;
exports.FR_MATERIAL_NODE_ARITHMETIC = 0xb;
exports.FR_MATERIAL_NODE_FRESNEL = 0xc;
exports.FR_MATERIAL_NODE_NORMAL_MAP = 0xd;
exports.FR_MATERIAL_NODE_IMAGE_TEXTURE = 0xe;
exports.FR_MATERIAL_NODE_NOISE2D_TEXTURE = 0xf;
exports.FR_MATERIAL_NODE_DOT_TEXTURE = 0x10;
exports.FR_MATERIAL_NODE_GRADIENT_TEXTURE = 0x11;
exports.FR_MATERIAL_NODE_CHECKER_TEXTURE = 0x12;
exports.FR_MATERIAL_NODE_CONSTANT_TEXTURE = 0x13;
exports.FR_MATERIAL_NODE_INPUT_LOOKUP = 0x14;
exports.FR_MATERIAL_NODE_STANDARD = 0x15;
exports.FR_MATERIAL_NODE_BLEND_VALUE = 0x16;
exports.FR_MATERIAL_NODE_PASSTHROUGH = 0x17;
exports.FR_MATERIAL_NODE_ORENNAYAR = 0x18;
exports.FR_MATERIAL_NODE_FRESNEL_SCHLICK = 0x19;
exports.FR_MATERIAL_NODE_DIFFUSE_REFRACTION = 0x1b;
exports.FR_MATERIAL_NODE_BUMP_MAP = 0x1c;
exports.FR_MATERIAL_NODE_VOLUME = 0x1d;
exports.FR_MATERIAL_INPUT_COLOR = 0x0;
exports.FR_MATERIAL_INPUT_COLOR0 = 0x1;
exports.FR_MATERIAL_INPUT_COLOR1 = 0x2;
exports.FR_MATERIAL_INPUT_NORMAL = 0x3;
exports.FR_MATERIAL_INPUT_UV = 0x4;
exports.FR_MATERIAL_INPUT_DATA = 0x5;
exports.FR_MATERIAL_INPUT_ROUGHNESS = 0x6;
exports.FR_MATERIAL_INPUT_IOR = 0x7;
exports.FR_MATERIAL_INPUT_ROUGHNESS_X = 0x8;
exports.FR_MATERIAL_INPUT_ROUGHNESS_Y = 0x9;
exports.FR_MATERIAL_INPUT_ROTATION = 0xa;
exports.FR_MATERIAL_INPUT_WEIGHT = 0xb;
exports.FR_MATERIAL_INPUT_OP = 0xc;
exports.FR_MATERIAL_INPUT_INVEC = 0xd;
exports.FR_MATERIAL_INPUT_UV_SCALE = 0xe;
exports.FR_MATERIAL_INPUT_VALUE = 0xf;
exports.FR_MATERIAL_INPUT_REFLECTANCE = 0x10;
exports.FR_MATERIAL_INPUT_SCALE = 0x11;
exports.FR_MATERIAL_INPUT_SCATTERING = 0x12;
exports.FR_MATERIAL_INPUT_ABSORBTION = 0x13;
exports.FR_MATERIAL_INPUT_EMISSION = 0x14;
exports.FR_MATERIAL_INPUT_G = 0x15;
exports.FR_MATERIAL_INPUT_MULTISCATTER = 0x16;
exports.FR_MATERIAL_INPUT_COLOR2 = 0x17;
exports.FR_MATERIAL_INPUT_COLOR3 = 0x18;
exports.FR_MATERIAL_INPUT_MAX = 0x19;
exports.FR_MATERIAL_STANDARD_INPUT_DIFFUSE_COLOR = 0x112;
exports.FR_MATERIAL_STANDARD_INPUT_DIFFUSE_NORMAL = 0x113;
exports.FR_MATERIAL_STANDARD_INPUT_GLOSSY_COLOR = 0x114;
exports.FR_MATERIAL_STANDARD_INPUT_GLOSSY_NORMAL = 0x115;
exports.FR_MATERIAL_STANDARD_INPUT_GLOSSY_ROUGHNESS_X = 0x116;
exports.FR_MATERIAL_STANDARD_INPUT_CLEARCOAT_COLOR = 0x117;
exports.FR_MATERIAL_STANDARD_INPUT_CLEARCOAT_NORMAL = 0x118;
exports.FR_MATERIAL_STANDARD_INPUT_REFRACTION_COLOR = 0x119;
exports.FR_MATERIAL_STANDARD_INPUT_REFRACTION_NORMAL = 0x11a;
exports.FR_MATERIAL_STANDARD_INPUT_REFRACTION_IOR = 0x11c;
exports.FR_MATERIAL_STANDARD_INPUT_DIFFUSE_TO_REFRACTION_WEIGHT = 0x11d;
exports.FR_MATERIAL_STANDARD_INPUT_GLOSSY_TO_DIFFUSE_WEIGHT = 0x11e;
exports.FR_MATERIAL_STANDARD_INPUT_CLEARCOAT_TO_GLOSSY_WEIGHT = 0x11f;
exports.FR_MATERIAL_STANDARD_INPUT_TRANSPARENCY = 0x120;
exports.FR_MATERIAL_STANDARD_INPUT_TRANSPARENCY_COLOR = 0x121;
exports.FR_MATERIAL_STANDARD_INPUT_REFRACTION_ROUGHNESS = 0x122;
exports.FR_MATERIAL_STANDARD_INPUT_GLOSSY_ROUGHNESS_Y = 0x123;
exports.FR_MATERIAL_INPUT_RASTER_METALLIC = 0x901;
exports.FR_MATERIAL_INPUT_RASTER_ROUGHNESS = 0x902;
exports.FR_MATERIAL_INPUT_RASTER_SUBSURFACE = 0x903;
exports.FR_MATERIAL_INPUT_RASTER_ANISOTROPIC = 0x904;
exports.FR_MATERIAL_INPUT_RASTER_SPECULAR = 0x905;
exports.FR_MATERIAL_INPUT_RASTER_SPECULARTINT = 0x906;
exports.FR_MATERIAL_INPUT_RASTER_SHEEN = 0x907;
exports.FR_MATERIAL_INPUT_RASTER_SHEENTINT = 0x908;
exports.FR_MATERIAL_INPUT_RASTER_CLEARCOAT = 0x90a;
exports.FR_MATERIAL_INPUT_RASTER_CLEARCOATGLOSS = 0x90b;
exports.FR_MATERIAL_INPUT_RASTER_COLOR = 0x90c;
exports.FR_MATERIAL_INPUT_RASTER_NORMAL = 0x90d;
exports.FR_MATERIAL_NODE_OP_ADD = 0x00;
exports.FR_MATERIAL_NODE_OP_SUB = 0x01;
exports.FR_MATERIAL_NODE_OP_MUL = 0x02;
exports.FR_MATERIAL_NODE_OP_DIV = 0x03;
exports.FR_MATERIAL_NODE_OP_SIN = 0x04;
exports.FR_MATERIAL_NODE_OP_COS = 0x05;
exports.FR_MATERIAL_NODE_OP_TAN = 0x06;
exports.FR_MATERIAL_NODE_OP_SELECT_X = 0x07;
exports.FR_MATERIAL_NODE_OP_SELECT_Y = 0x08;
exports.FR_MATERIAL_NODE_OP_SELECT_Z = 0x09;
exports.FR_MATERIAL_NODE_OP_SELECT_W = 0x0a;
exports.FR_MATERIAL_NODE_OP_COMBINE = 0x0b;
exports.FR_MATERIAL_NODE_OP_DOT3 = 0x0c;
exports.FR_MATERIAL_NODE_OP_DOT4 = 0x0d;
exports.FR_MATERIAL_NODE_OP_CROSS3 = 0x0e;
exports.FR_MATERIAL_NODE_OP_LENGTH3 = 0x0f;
exports.FR_MATERIAL_NODE_OP_NORMALIZE3 = 0x10;
exports.FR_MATERIAL_NODE_OP_POW = 0x11;
exports.FR_MATERIAL_NODE_OP_ACOS = 0x12;
exports.FR_MATERIAL_NODE_OP_ASIN = 0x13;
exports.FR_MATERIAL_NODE_OP_ATAN = 0x14;
exports.FR_MATERIAL_NODE_OP_AVERAGE_XYZ = 0x15;
exports.FR_MATERIAL_NODE_OP_AVERAGE = 0x16;
exports.FR_MATERIAL_NODE_OP_MIN = 0x17;
exports.FR_MATERIAL_NODE_OP_MAX = 0x18;
exports.FR_MATERIAL_NODE_OP_FLOOR = 0x19;
exports.FR_MATERIAL_NODE_OP_MOD = 0x1a;
exports.FR_MATERIAL_NODE_OP_ABS = 0x1b;
exports.FR_MATERIAL_NODE_OP_SHUFFLE_YZWX = 0x1c;
exports.FR_MATERIAL_NODE_OP_SHUFFLE_ZWXY = 0x1d;
exports.FR_MATERIAL_NODE_OP_SHUFFLE_WXYZ = 0x1e;
exports.FR_MATERIAL_NODE_OP_MAT_MUL = 0x1f;
exports.FR_MATERIAL_NODE_LOOKUP_UV = 0x0;
exports.FR_MATERIAL_NODE_LOOKUP_N = 0x1;
exports.FR_MATERIAL_NODE_LOOKUP_P = 0x2;
exports.FR_MATERIAL_NODE_LOOKUP_INVEC = 0x3;
exports.FR_MATERIAL_NODE_LOOKUP_OUTVEC = 0x4;
exports.FR_MATERIAL_NODE_LOOKUP_UV1 = 0x5;
exports.FR_POST_EFFECT_TYPE = 0x0;
exports.FR_POST_EFFECT_PARAMETER_COUNT = 0x1;
exports.FR_POST_EFFECT_WHITE_BALANCE_COLOR_SPACE = 0x1;
exports.FR_POST_EFFECT_WHITE_BALANCE_COLOR_TEMPERATURE = 0x2;
exports.FR_POST_EFFECT_SIMPLE_TONEMAP_EXPOSURE = 0x1;
exports.FR_POST_EFFECT_SIMPLE_TONEMAP_CONTRAST = 0x2;
exports.FR_AOV_COLOR = 0x0;
exports.FR_AOV_OPACITY = 0x1;
exports.FR_AOV_WORLD_COORDINATE = 0x2;
exports.FR_AOV_UV = 0x3;
exports.FR_AOV_MATERIAL_IDX = 0x4;
exports.FR_AOV_GEOMETRIC_NORMAL = 0x5;
exports.FR_AOV_SHADING_NORMAL = 0x6;
exports.FR_AOV_DEPTH = 0x7;
exports.FR_AOV_OBJECT_ID = 0x8;
exports.FR_AOV_OBJECT_GROUP_ID = 0x9;
exports.FR_AOV_MAX = 0xa;
exports.FR_POST_EFFECT_TONE_MAP = 0x0;
exports.FR_POST_EFFECT_WHITE_BALANCE = 0x1;
exports.FR_POST_EFFECT_SIMPLE_TONEMAP = 0x2;
exports.FR_POST_EFFECT_NORMALIZATION = 0x3;
exports.FR_POST_EFFECT_GAMMA_CORRECTION = 0x4;
exports.FR_COLOR_SPACE_SRGB = 0x1;
exports.FR_COLOR_SPACE_ADOBE_RGB = 0x2;
exports.FR_COLOR_SPACE_REC2020 = 0x3;
exports.FR_COLOR_SPACE_DCIP3 = 0x4;
exports.FR_MATERIAL_NODE_INPUT_TYPE_FLOAT4 = 0x1;
exports.FR_MATERIAL_NODE_INPUT_TYPE_UINT = 0x2;
exports.FR_MATERIAL_NODE_INPUT_TYPE_NODE = 0x3;
exports.FR_MATERIAL_NODE_INPUT_TYPE_IMAGE = 0x4;
exports.FR_RASTER_SHADOWS_FILTER_NONE = 0x90e;
exports.FR_RASTER_SHADOWS_FILTER_PCF = 0x90f;
exports.FR_RASTER_SHADOWS_FILTER_PCSS = 0x910;
exports.FR_RASTER_SHADOWS_SAMPLING_BILINEAR = 0x911;
exports.FR_RASTER_SHADOWS_SAMPLING_HAMMERSLEY = 0x912;
exports.FR_RASTER_SHADOWS_SAMPLING_MULTIJITTERED = 0x913;
exports.FR_SUBDIV_BOUNDARY_INTERFOP_TYPE_EDGE_AND_CORNER = 0x1;
exports.FR_SUBDIV_BOUNDARY_INTERFOP_TYPE_EDGE_ONLY = 0x2;
exports.FR_IMAGE_WRAP_TYPE_REPEAT = 0x1;
exports.FR_IMAGE_WRAP_TYPE_MIRRORED_REPEAT = 0x2;
exports.FR_IMAGE_WRAP_TYPE_CLAMP_TO_EDGE = 0x3;
exports.FR_IMAGE_WRAP_TYPE_CLAMP_TO_BORDER = 0x4;
exports.FR_MAX_AA_SAMPLES = 32;
exports.FR_MAX_AA_GRID_SIZE = 16;
exports.FR_FALSE = 0;
exports.FR_TRUE = 1;
var _consts = {};
for (var key in this) {
    if (this.hasOwnProperty(key)) {
        // let parts = key.split("_")
        // console.log(parts)
        // let firstKey = parts.shift()
        // let nextObj = _consts[firstKey]
        // nextObj = nextObj === undefined ? {} : nextObj
        // _consts[firstKey] = nextObj
        // let parents = []
        // parts.forEach(part => {
        //     if (nextObj[part] === undefined) {
        //         nextObj[part] = {}
        //     }
        //     parents.push(nextObj)
        //     nextObj = nextObj[part]
        // })
        // let lastKey = parts[parts.length - 1]
        // let lastParent = parents[parents.length - 1]
        _consts[key] = this[key];
        // lastParent[lastKey] = this[key]
        // lastParent[this[key]] = key
    }
}
exports.default = __assign({}, _consts);


/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,